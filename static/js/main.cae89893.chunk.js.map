{"version":3,"sources":["panels/Home.js","panels/Persik.js","App.js","index.js"],"names":["Home","id","go","fetchedUser","title","className","weight","style","marginBottom","onClick","data-to","size","osName","platform","Persik","left","IOS","top","type","placeholder","value","App","useState","activePanel","setActivePanel","setUser","useEffect","a","bridge","send","user","subscribe","detail","data","schemeAttribute","document","createAttribute","scheme","body","attributes","setNamedItem","fetchData","e","currentTarget","dataset","to","ReactDOM","render","getElementById"],"mappings":"0sBA2CeA,EAlCF,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,GAAP,EAAWC,YAAX,OACX,kBAAC,IAAD,CAAOF,GAAIA,GACT,kBAAC,IAAD,uFAEA,kBAAC,IAAD,CAAOG,MAAM,sBACX,kBAAC,IAAD,CAAKC,UAAU,WACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMC,OAAO,UAAUC,MAAO,CAAEC,aAAc,KAA9C,0NAIF,kBAAC,IAAD,CAAKP,GAAG,OACN,kBAAC,IAAD,CAAQQ,QAASP,EAAIQ,UAAQ,SAASC,KAAK,KAA3C,4E,wECHJC,G,OAASC,eA0CAC,EAxCA,SAAC,GAAD,IAAGb,EAAH,EAAGA,GAAIC,EAAP,EAAOA,GAAP,EAAWC,YAAX,OACb,kBAAC,IAAD,CAAOF,GAAIA,GACT,kBAAC,IAAD,CACEc,KACE,kBAAC,IAAD,CAAmBN,QAASP,EAAIQ,UAAQ,QACrCE,IAAWI,IAAM,kBAAC,IAAD,MAAwB,kBAAC,IAAD,QAHhD,uEASA,kBAAC,IAAD,KAKE,kBAAC,IAAD,CAAOC,IAAI,kFAAiBC,KAAK,OAAOC,YAAY,oFACpD,kBAAC,IAAD,CAAOF,IAAI,yCAAWC,KAAK,OAAOC,YAAY,0HAC9C,kBAAC,IAAD,CAAOF,IAAI,2BAAOC,KAAK,OAAOC,YAAY,kJAC1C,kBAAC,IAAD,CACEF,IAAI,oDACJE,YAAY,6OAEd,kBAAC,IAAD,CACEF,IAAI,yHACJC,KAAK,OACLE,MAAM,uCCNCC,EAhCH,WAAO,IAAD,EACsBC,mBAAS,QAD/B,mBACTC,EADS,KACIC,EADJ,OAEeF,mBAAS,MAFxB,mBAETnB,EAFS,KAEIsB,EAFJ,KAKhBC,qBAAU,WAAM,4CAQd,4BAAAC,EAAA,sEACqBC,IAAOC,KAAK,uBADjC,OACQC,EADR,OAEEL,EAAQK,GAFV,4CARc,sBACdF,IAAOG,WAAU,YAAiC,IAAD,IAA7BC,OAAUd,EAAmB,EAAnBA,KAAMe,EAAa,EAAbA,KAClC,GAAa,yBAATf,EAAiC,CACnC,IAAMgB,EAAkBC,SAASC,gBAAgB,UACjDF,EAAgBd,MAAQa,EAAKI,OAASJ,EAAKI,OAAS,eACpDF,SAASG,KAAKC,WAAWC,aAAaN,OAL5B,mCAYdO,KACC,IAEH,IAAMvC,EAAK,SAACwC,GACVlB,EAAekB,EAAEC,cAAcC,QAAQC,KAGzC,OACE,kBAAC,IAAD,CAAMtB,YAAaA,GACjB,kBAAC,EAAD,CAAMtB,GAAG,OAAOE,YAAaA,EAAaD,GAAIA,IAC9C,kBAAC,EAAD,CAAQD,GAAG,SAASC,GAAIA,MC3B9B0B,IAAOC,KAAK,gBAEZiB,IAASC,OAAO,kBAAC,EAAD,MAASZ,SAASa,eAAe,W","file":"static/js/main.cae89893.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Panel from \"@vkontakte/vkui/dist/components/Panel/Panel\";\nimport PanelHeader from \"@vkontakte/vkui/dist/components/PanelHeader/PanelHeader\";\nimport Button from \"@vkontakte/vkui/dist/components/Button/Button\";\nimport Group from \"@vkontakte/vkui/dist/components/Group/Group\";\nimport Div from \"@vkontakte/vkui/dist/components/Div/Div\";\nimport \"./Home.css\";\nimport { Text } from \"@vkontakte/vkui\";\nconst Home = ({ id, go, fetchedUser }) => (\n  <Panel id={id}>\n    <PanelHeader>Пожертвования</PanelHeader>\n\n    <Group title=\"Navigation Example\">\n      <Div className=\"wrapper\">\n        <Div>\n          <Text weight=\"regular\" style={{ marginBottom: 16 }}>\n            У Вас пока нет сборов. Начните доброе дело.\n          </Text>\n        </Div>\n        <Div id=\"btn\">\n          <Button onClick={go} data-to=\"persik\" size=\"l\">\n            Создать сбор\n          </Button>\n        </Div>\n      </Div>\n    </Group>\n  </Panel>\n);\n\nHome.propTypes = {\n  id: PropTypes.string.isRequired,\n  go: PropTypes.func.isRequired,\n  fetchedUser: PropTypes.shape({\n    photo_200: PropTypes.string,\n    first_name: PropTypes.string,\n    last_name: PropTypes.string,\n    city: PropTypes.shape({\n      title: PropTypes.string,\n    }),\n  }),\n};\n\nexport default Home;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { platform, IOS } from \"@vkontakte/vkui\";\nimport Panel from \"@vkontakte/vkui/dist/components/Panel/Panel\";\nimport PanelHeader from \"@vkontakte/vkui/dist/components/PanelHeader/PanelHeader\";\nimport PanelHeaderButton from \"@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton\";\nimport Icon28ChevronBack from \"@vkontakte/icons/dist/28/chevron_back\";\nimport FormLayout from \"@vkontakte/vkui/dist/components/FormLayout/FormLayout\";\nimport Icon24Camera from \"@vkontakte/icons/dist/24/camera\";\nimport FormLayoutGroup from \"@vkontakte/vkui/dist/components/FormLayoutGroup/FormLayoutGroup\";\nimport Icon24Back from \"@vkontakte/icons/dist/24/back\";\nimport { File } from \"@vkontakte/vkui\";\nimport { Input } from \"@vkontakte/vkui\";\nimport { Textarea } from \"@vkontakte/vkui\";\nimport { Button } from \"@vkontakte/vkui\";\n\nimport \"./Persik.css\";\n\nconst osName = platform();\n\nconst Persik = ({ id, go, fetchedUser }) => (\n  <Panel id={id}>\n    <PanelHeader\n      left={\n        <PanelHeaderButton onClick={go} data-to=\"home\">\n          {osName === IOS ? <Icon28ChevronBack /> : <Icon24Back />}\n        </PanelHeaderButton>\n      }\n    >\n      Целевой сбор\n    </PanelHeader>\n    <FormLayout>\n      {/* <File top=\"Загрузите ваше фото\" before={<Icon24Camera />} controlSize=\"l\">\n          Открыть галерею\n        </File> */}\n\n      <Input top=\"Название сбора\" type=\"text\" placeholder=\"Название сбора\" />\n      <Input top=\"Сумма, ₽\" type=\"text\" placeholder=\"Сколько нужно собрать?\" />\n      <Input top=\"Цель\" type=\"text\" placeholder=\"Например, лечение человека\" />\n      <Textarea\n        top=\"Описание \"\n        placeholder=\"На что пойдут деньги и как они кому-то помогут?\"\n      />\n      <Input\n        top=\"Куда получит        ь деньги\"\n        type=\"text\"\n        value=\"Cчет VK Pay 1234\"\n      />\n      {/* <Button size=\"xl\" onClick={go} data-to=\"Additionally\">\n        Далее\n      </Button> */}\n    </FormLayout>\n  </Panel>\n);\n\nPersik.propTypes = {\n  id: PropTypes.string.isRequired,\n  go: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React, { useState, useEffect } from \"react\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport View from \"@vkontakte/vkui/dist/components/View/View\";\nimport \"@vkontakte/vkui/dist/vkui.css\";\n\nimport Home from \"./panels/Home\";\nimport Persik from \"./panels/Persik\";\n\nconst App = () => {\n  const [activePanel, setActivePanel] = useState(\"home\");\n  const [fetchedUser, setUser] = useState(null);\n  //const [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\n  useEffect(() => {\n    bridge.subscribe(({ detail: { type, data } }) => {\n      if (type === \"VKWebAppUpdateConfig\") {\n        const schemeAttribute = document.createAttribute(\"scheme\");\n        schemeAttribute.value = data.scheme ? data.scheme : \"client_light\";\n        document.body.attributes.setNamedItem(schemeAttribute);\n      }\n    });\n    async function fetchData() {\n      const user = await bridge.send(\"VKWebAppGetUserInfo\");\n      setUser(user);\n    }\n    fetchData();\n  }, []);\n\n  const go = (e) => {\n    setActivePanel(e.currentTarget.dataset.to);\n  };\n\n  return (\n    <View activePanel={activePanel}>\n      <Home id=\"home\" fetchedUser={fetchedUser} go={go} />\n      <Persik id=\"persik\" go={go} />\n    </View>\n  );\n};\n\nexport default App;\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}